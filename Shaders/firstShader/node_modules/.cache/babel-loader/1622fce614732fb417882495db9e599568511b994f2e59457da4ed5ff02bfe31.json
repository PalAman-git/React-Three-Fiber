{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\web development\\\\React Three Fiber\\\\Shaders\\\\firstShader\\\\src\\\\app.jsx\",\n  _s = $RefreshSig$();\nimport planevertex from './shaders/test/vertex.js';\nimport planefragment from './shaders/test/fragment.js';\nimport { useRef } from 'react';\nimport { shaderMaterial, OrbitControls } from '@react-three/drei';\nimport { useFrame, extend } from '@react-three/fiber';\nimport { Color } from 'three';\n\n//just use the shaderMaterial helper from the drei its so simple to use\n//plane Material\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlaneMaterial = shaderMaterial({\n  u_time: 0,\n  u_colorA: new Color(\"#FFE486\"),\n  u_colorB: new Color(\"#FEB3D9\")\n}, planevertex, planefragment);\nextend({\n  PlaneMaterial\n}); //so that we can use it as a component\n\n//for blob material\nconst BlobMaterial = shaderMaterial({\n  u_time: 0,\n  u_colorA: new Color(\"#FFE486\"),\n  u_colorB: new Color(\"#FEB3D9\")\n}, blobvertex, blobfragment);\nextend({\n  BlobMaterial\n}); //so that we can use it as a component\n\nfunction App() {\n  _s();\n  const plane = useRef(); //direct access to the plane mesh\n  const blob = useRef(); //direct access to the blob mesh\n\n  const planeMaterial = useRef(); //reference of the shader material\n  const blobMaterial = useRef();\n  useFrame((state, delta) => {\n    // planeMaterial.current.u_time = state.clock.elapsedTime;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: ref,\n      position: [0, 0, 0],\n      rotation: [-Math.PI / 2, 0, 0],\n      scale: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(\"icosahedronGeometry\", {\n        args: [2, 20]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"blobMaterial\", {\n        ref: Material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"bXVpnvmlqgrLaMlODlafl5SYtso=\", false, function () {\n  return [useFrame];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["planevertex","planefragment","useRef","shaderMaterial","OrbitControls","useFrame","extend","Color","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaneMaterial","u_time","u_colorA","u_colorB","BlobMaterial","blobvertex","blobfragment","App","_s","plane","blob","planeMaterial","blobMaterial","state","delta","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","position","rotation","Math","PI","scale","args","Material","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Desktop/web development/React Three Fiber/Shaders/firstShader/src/app.jsx"],"sourcesContent":["import planevertex from './shaders/test/vertex.js'\r\nimport planefragment from './shaders/test/fragment.js'\r\nimport { useRef } from 'react'\r\nimport { shaderMaterial,OrbitControls } from '@react-three/drei'\r\nimport { useFrame,extend } from '@react-three/fiber';\r\nimport { Color } from 'three';\r\n\r\n//just use the shaderMaterial helper from the drei its so simple to use\r\n//plane Material\r\nconst PlaneMaterial = shaderMaterial(\r\n    {\r\n        u_time:0,\r\n        u_colorA:  new Color(\"#FFE486\") ,\r\n        u_colorB:  new Color(\"#FEB3D9\") ,  \r\n    },\r\n    planevertex,\r\n    planefragment\r\n)\r\nextend({PlaneMaterial});//so that we can use it as a component\r\n\r\n\r\n\r\n//for blob material\r\nconst BlobMaterial = shaderMaterial(\r\n    {\r\n        u_time:0,\r\n        u_colorA:  new Color(\"#FFE486\") ,\r\n        u_colorB:  new Color(\"#FEB3D9\") ,  \r\n    },\r\n    blobvertex,\r\n    blobfragment\r\n)\r\nextend({BlobMaterial});//so that we can use it as a component\r\n\r\n\r\n\r\nfunction App(){\r\n    const plane = useRef();//direct access to the plane mesh\r\n    const blob = useRef();//direct access to the blob mesh\r\n\r\n    const planeMaterial = useRef();//reference of the shader material\r\n    const blobMaterial = useRef();\r\n\r\n  useFrame((state,delta)=>{\r\n        // planeMaterial.current.u_time = state.clock.elapsedTime;\r\n        \r\n  })\r\n\r\n  return (\r\n    <>\r\n    <OrbitControls />{ /** using the orbit controls */ }\r\n\r\n    {/** for plane */}\r\n      {/* <mesh ref={ref} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\r\n        <planeGeometry args={[2, 20]} />\r\n        <planeMaterial ref={ Material } />\r\n      </mesh> */}\r\n\r\n    {/** for blob */}\r\n      <mesh ref={ref} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\r\n        <icosahedronGeometry args={[2, 20]} />\r\n        <blobMaterial ref={ Material } />\r\n      </mesh>\r\n\r\n    </>\r\n  )\r\n}\r\nexport default App"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,cAAc,EAACC,aAAa,QAAQ,mBAAmB;AAChE,SAASC,QAAQ,EAACC,MAAM,QAAQ,oBAAoB;AACpD,SAASC,KAAK,QAAQ,OAAO;;AAE7B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,aAAa,GAAGT,cAAc,CAChC;EACIU,MAAM,EAAC,CAAC;EACRC,QAAQ,EAAG,IAAIP,KAAK,CAAC,SAAS,CAAC;EAC/BQ,QAAQ,EAAG,IAAIR,KAAK,CAAC,SAAS;AAClC,CAAC,EACDP,WAAW,EACXC,aAAa,CAChB;AACDK,MAAM,CAAC;EAACM;AAAa,CAAC,CAAC,CAAC;;AAIxB;AACA,MAAMI,YAAY,GAAGb,cAAc,CAC/B;EACIU,MAAM,EAAC,CAAC;EACRC,QAAQ,EAAG,IAAIP,KAAK,CAAC,SAAS,CAAC;EAC/BQ,QAAQ,EAAG,IAAIR,KAAK,CAAC,SAAS;AAClC,CAAC,EACDU,UAAU,EACVC,YAAY,CACf;AACDZ,MAAM,CAAC;EAACU;AAAY,CAAC,CAAC,CAAC;;AAIvB,SAASG,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACV,MAAMC,KAAK,GAAGnB,MAAM,EAAE,CAAC;EACvB,MAAMoB,IAAI,GAAGpB,MAAM,EAAE,CAAC;;EAEtB,MAAMqB,aAAa,GAAGrB,MAAM,EAAE,CAAC;EAC/B,MAAMsB,YAAY,GAAGtB,MAAM,EAAE;EAE/BG,QAAQ,CAAC,CAACoB,KAAK,EAACC,KAAK,KAAG;IAClB;EAAA,CAEL,CAAC;EAEF,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA,CAACL,aAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eASftB,OAAA;MAAMuB,GAAG,EAAEA,GAAI;MAACC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAAEC,QAAQ,EAAE,CAAC,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAACC,KAAK,EAAE,GAAI;MAAAV,QAAA,gBAC/ElB,OAAA;QAAqB6B,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtCtB,OAAA;QAAcuB,GAAG,EAAGO;MAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B;EAAA,gBAEN;AAEP;AAACX,EAAA,CA9BQD,GAAG;EAAA,QAOVd,QAAQ;AAAA;AAAAmC,EAAA,GAPDrB,GAAG;AA+BZ,eAAeA,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}